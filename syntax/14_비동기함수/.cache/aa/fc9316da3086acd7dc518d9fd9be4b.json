{"id":"app.ts","dependencies":[{"name":"/Users/kkojae/Documents/git/fastcampus_js_ts_essential/syntax/14_비동기함수/tsconfig.json","includedInParent":true,"mtime":1625988735366},{"name":"/Users/kkojae/Documents/git/fastcampus_js_ts_essential/syntax/14_비동기함수/package.json","includedInParent":true,"mtime":1625989499703}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nfunction delay(ms) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      if (Math.floor(Math.random() * 10) % 2 === 0) {\n        resolve(\"success\");\n      } else {\n        reject(\"failure\");\n      }\n    }, ms);\n  });\n} // delay(3000) //\n//   .then((result: string) => {\n//     console.log(\"done promise\" + result);\n//   })\n//   .catch((error: string) => {\n//     console.log(\"fail promise!\" + error);\n//   });\n\n\nfunction main() {\n  return __awaiter(this, void 0, void 0, function () {\n    var result, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          console.log(\"start job\");\n          return [4\n          /*yield*/\n          , delay(3000)];\n\n        case 1:\n          result = _a.sent();\n          console.log(\"done async!\" + result);\n          return [3\n          /*break*/\n          , 3];\n\n        case 2:\n          e_1 = _a.sent();\n          console.error(\"fail async!\" + e_1);\n          return [3\n          /*break*/\n          , 3];\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nmain();"},"sourceMaps":{"js":{"mappings":[{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":146,"column":0}},{"source":"app.ts","name":null,"original":{"line":1,"column":9},"generated":{"line":146,"column":9}},{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":146,"column":14}},{"source":"app.ts","name":null,"original":{"line":1,"column":15},"generated":{"line":146,"column":15}},{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":146,"column":17}},{"source":"app.ts","name":null,"original":{"line":1,"column":25},"generated":{"line":146,"column":19}},{"source":"app.ts","name":null,"original":{"line":2,"column":2},"generated":{"line":147,"column":0}},{"source":"app.ts","name":null,"original":{"line":2,"column":9},"generated":{"line":147,"column":9}},{"source":"app.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":147,"column":13}},{"source":"app.ts","name":null,"original":{"line":2,"column":9},"generated":{"line":147,"column":20}},{"source":"app.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":147,"column":21}},{"source":"app.ts","name":null,"original":{"line":2,"column":22},"generated":{"line":147,"column":31}},{"source":"app.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":147,"column":38}},{"source":"app.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":147,"column":40}},{"source":"app.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":147,"column":46}},{"source":"app.ts","name":null,"original":{"line":2,"column":37},"generated":{"line":147,"column":48}},{"source":"app.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":148,"column":0}},{"source":"app.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":148,"column":4}},{"source":"app.ts","name":null,"original":{"line":3,"column":14},"generated":{"line":148,"column":14}},{"source":"app.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":148,"column":15}},{"source":"app.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":148,"column":27}},{"source":"app.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":149,"column":0}},{"source":"app.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":149,"column":10}},{"source":"app.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":149,"column":14}},{"source":"app.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":149,"column":15}},{"source":"app.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":149,"column":20}},{"source":"app.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":149,"column":21}},{"source":"app.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":149,"column":25}},{"source":"app.ts","name":null,"original":{"line":4,"column":26},"generated":{"line":149,"column":26}},{"source":"app.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":149,"column":32}},{"source":"app.ts","name":null,"original":{"line":4,"column":37},"generated":{"line":149,"column":37}},{"source":"app.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":149,"column":39}},{"source":"app.ts","name":null,"original":{"line":4,"column":43},"generated":{"line":149,"column":43}},{"source":"app.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":149,"column":44}},{"source":"app.ts","name":null,"original":{"line":4,"column":49},"generated":{"line":149,"column":49}},{"source":"app.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":149,"column":50}},{"source":"app.ts","name":null,"original":{"line":4,"column":52},"generated":{"line":149,"column":52}},{"source":"app.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":150,"column":0}},{"source":"app.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":150,"column":8}},{"source":"app.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":150,"column":15}},{"source":"app.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":150,"column":16}},{"source":"app.ts","name":null,"original":{"line":5,"column":15},"generated":{"line":150,"column":25}},{"source":"app.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":150,"column":26}},{"source":"app.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":151,"column":0}},{"source":"app.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":151,"column":7}},{"source":"app.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":151,"column":13}},{"source":"app.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":152,"column":0}},{"source":"app.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":152,"column":8}},{"source":"app.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":152,"column":14}},{"source":"app.ts","name":null,"original":{"line":7,"column":15},"generated":{"line":152,"column":15}},{"source":"app.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":152,"column":24}},{"source":"app.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":152,"column":25}},{"source":"app.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":153,"column":0}},{"source":"app.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":154,"column":0}},{"source":"app.ts","name":null,"original":{"line":3,"column":14},"generated":{"line":154,"column":5}},{"source":"app.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":154,"column":7}},{"source":"app.ts","name":null,"original":{"line":3,"column":14},"generated":{"line":154,"column":9}},{"source":"app.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":154,"column":10}},{"source":"app.ts","name":null,"original":{"line":10,"column":3},"generated":{"line":155,"column":0}},{"source":"app.ts","name":null,"original":{"line":2,"column":9},"generated":{"line":155,"column":3}},{"source":"app.ts","name":null,"original":{"line":2,"column":2},"generated":{"line":155,"column":4}},{"source":"app.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":156,"column":0}},{"source":"app.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":156,"column":2}},{"source":"app.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":157,"column":0}},{"source":"app.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":158,"column":0}},{"source":"app.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":159,"column":0}},{"source":"app.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":160,"column":0}},{"source":"app.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":161,"column":0}},{"source":"app.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":162,"column":0}},{"source":"app.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":165,"column":0}},{"source":"app.ts","name":null,"original":{"line":21,"column":15},"generated":{"line":165,"column":9}},{"source":"app.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":165,"column":13}},{"source":"app.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":165,"column":16}},{"source":"app.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":173,"column":0}},{"source":"app.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":173,"column":10}},{"source":"app.ts","name":null,"original":{"line":23,"column":11},"generated":{"line":173,"column":17}},{"source":"app.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":173,"column":18}},{"source":"app.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":173,"column":21}},{"source":"app.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":173,"column":22}},{"source":"app.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":173,"column":33}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":174,"column":0}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":174,"column":17}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":174,"column":18}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":175,"column":0}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":176,"column":0}},{"source":"app.ts","name":null,"original":{"line":24,"column":25},"generated":{"line":176,"column":12}},{"source":"app.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":176,"column":17}},{"source":"app.ts","name":null,"original":{"line":24,"column":31},"generated":{"line":176,"column":18}},{"source":"app.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":176,"column":22}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":176,"column":23}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":176,"column":24}},{"source":"app.ts","name":null,"original":{"line":24,"column":10},"generated":{"line":179,"column":0}},{"source":"app.ts","name":null,"original":{"line":24,"column":10},"generated":{"line":179,"column":10}},{"source":"app.ts","name":null,"original":{"line":24,"column":16},"generated":{"line":179,"column":16}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":179,"column":19}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":179,"column":21}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":179,"column":22}},{"source":"app.ts","name":null,"original":{"line":24,"column":19},"generated":{"line":179,"column":26}},{"source":"app.ts","name":null,"original":{"line":24,"column":10},"generated":{"line":179,"column":28}},{"source":"app.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":180,"column":0}},{"source":"app.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":180,"column":10}},{"source":"app.ts","name":null,"original":{"line":25,"column":11},"generated":{"line":180,"column":17}},{"source":"app.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":180,"column":18}},{"source":"app.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":180,"column":21}},{"source":"app.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":180,"column":22}},{"source":"app.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":180,"column":38}},{"source":"app.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":180,"column":44}},{"source":"app.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":187,"column":0}},{"source":"app.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":187,"column":10}},{"source":"app.ts","name":null,"original":{"line":27,"column":11},"generated":{"line":187,"column":17}},{"source":"app.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":187,"column":18}},{"source":"app.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":187,"column":23}},{"source":"app.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":187,"column":24}},{"source":"app.ts","name":null,"original":{"line":27,"column":34},"generated":{"line":187,"column":40}},{"source":"app.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":187,"column":43}},{"source":"app.ts","name":null,"original":{"line":29,"column":1},"generated":{"line":199,"column":0}},{"source":"app.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":201,"column":0}},{"source":"app.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":201,"column":4}}],"sources":{"app.ts":"function delay(ms: number): Promise<string> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (Math.floor(Math.random() * 10) % 2 === 0) {\n        resolve(\"success\");\n      } else {\n        reject(\"failure\");\n      }\n    }, ms);\n  });\n}\n\n// delay(3000) //\n//   .then((result: string) => {\n//     console.log(\"done promise\" + result);\n//   })\n//   .catch((error: string) => {\n//     console.log(\"fail promise!\" + error);\n//   });\n\nasync function main() {\n  try {\n    console.log(\"start job\");\n    const result = await delay(3000);\n    console.log(\"done async!\" + result);\n  } catch (e) {\n    console.error(\"fail async!\" + e);\n  }\n}\n\nmain();\n"},"lineCount":null}},"error":null,"hash":"8a034a04a926e4a039540f3a70032697","cacheData":{"env":{}}}