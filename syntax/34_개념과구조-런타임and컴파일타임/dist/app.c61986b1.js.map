{"version":3,"sources":["app.ts"],"names":[],"mappings":";;AAAA,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAiC;AAC/B,MAAI,OAAO,CAAP,KAAa,QAAb,IAAyB,OAAO,CAAP,KAAa,QAA1C,EAAoD;AAClD,WAAO,CAAC,GAAG,CAAX;AACD;;AACD,EAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;AACD,EAOD;;;AACA,IAAM,IAAI,GAAG,0BAAb,EACA;;AACA,IAAM,GAAG,GAAe,IAAI,CAAC,KAAL,CAAW,IAAX,CAAxB;AAEA,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAL,EAAQ,GAAG,CAAC,CAAZ,CAAlB;AAEA,OAAO,CAAC,GAAR,CAAY,MAAZ","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["function add(a: number, b: number): number {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return a + b;\n  }\n  console.log(\"타입이 잘못 들어왔습니다.\");\n}\n\ntype ObjectType = {\n  x: number;\n  y: number;\n};\n\n// 서버에서 받아오는 데이터가 abc 문자열 데이터일 경우 컴파일 타임에 걸러질 수 없다. 이에대한 방어 코드가 필요합니다.\nconst json = `{\"x\":\"10\", \"y\":20}`;\n// as ObjectType은 JSON.parse(json)의 값을 ObjectType으로 반환해준다는 의미\nconst obj: ObjectType = JSON.parse(json) as ObjectType;\n\nconst sumNum = add(obj.x, obj.y);\n\nconsole.log(sumNum);\n"]}