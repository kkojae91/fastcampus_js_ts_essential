/*
변수나 함수는 스코프라는 공간에 생긴다.
스코프에는 3가지 종류가 있는데, 글로벌 스코프(전역 스코프), 함수 스코프, 블록 스코프가 있습니다.

글로벌 스코프는 이름에서 알 수 있듯 어플리케이션이 실행되면 그 즉시 생성되며, 어플리케이션이 종료되면 그때 사라지게 됩니다.

함수 스코프는 함수를 통해서 만들 수 있는 스코프 공간입니다.
함수호출로 진입하면 스코프가 생기고, return 으로 함수가 종료되면 스코프도 사라지게 된다.

블록 스코프는 코드를 묶고 있는 공간이라면 모두 블록 스코프가 생긴다.
블록이 만들어지고, 그 블록 안으로 진입했을 때 생성되며, 그 블록을 벗어나면 해당하는 스코프도 사라지게 된다.
*/

/*
호이스팅 hoisting
변수와 함수는 모두 먼저 위로 끌어 올려 선언 한 다음 진행 된다.
함수문은 적용이 되나, 함수식은 적용이 되지 않는다.
*/

// 글로벌 스코프
let myName = "ko";

// 함수 스코프
function foo() {
  let x = 10;
  // 함수 안에서만 사용할 수 있는 x 변수
  console.log(x);
  // 중첩 될 수 있다. 함수 안에서 전역공간에 있는 myName을 접근 할 수 있다.
  console.log(myName);

  function bar() {
    let y = 10;

    // 중첩되어 아래의 모든 변수들이 출력 된다.
    console.log(myName);
    console.log(x);
    console.log(y);
  }

  // y는 bar 함수 스코프 안에 존재하기 때문에 is not defined
  // console.log(y);

  if (x === 10) {
    let x = 100;

    // 같은 변수가 있다면 현재 자기 자신의 스코프에서 먼저 찾고 이곳에서 찾아지지 않을 경우 하나씩 밖으로 나가서 찾아 나간다.
    // 최종적으로 전역스코프에서 찾아 봤는데 찾지 못하면 is not defined
    console.log(x);
  }
  bar();
}

foo();
// x는 함수 스코프 안에 존재하기 때문에 is not defined
console.log(x);
